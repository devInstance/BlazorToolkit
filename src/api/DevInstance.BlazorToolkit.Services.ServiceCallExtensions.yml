### YamlMime:ManagedReference
items:
- uid: DevInstance.BlazorToolkit.Services.ServiceCallExtensions
  commentId: T:DevInstance.BlazorToolkit.Services.ServiceCallExtensions
  id: ServiceCallExtensions
  parent: DevInstance.BlazorToolkit.Services
  children:
  - DevInstance.BlazorToolkit.Services.ServiceCallExtensions.BeginServiceCall(DevInstance.BlazorToolkit.Services.IServiceExecutionHost,DevInstance.LogScope.IScopeLog)
  - DevInstance.BlazorToolkit.Services.ServiceCallExtensions.ServiceCallAsync``1(DevInstance.BlazorToolkit.Services.IServiceExecutionHost,DevInstance.BlazorToolkit.Services.PerformAsyncCallHandler{``0},System.Action{``0},System.Func{``0,System.Threading.Tasks.Task},System.Action{DevInstance.BlazorToolkit.Services.ServiceActionError[]},System.Action,System.Boolean)
  langs:
  - csharp
  - vb
  name: ServiceCallExtensions
  nameWithType: ServiceCallExtensions
  fullName: DevInstance.BlazorToolkit.Services.ServiceCallExtensions
  type: Class
  source:
    remote:
      path: src/Services/ServiceCall.cs
      branch: dotnet8
      repo: https://github.com/devInstance/BlazorToolkit
    id: ServiceCallExtensions
    path: Services/ServiceCall.cs
    startLine: 9
  assemblies:
  - DevInstance.BlazorToolkit
  namespace: DevInstance.BlazorToolkit.Services
  summary: Provides extension methods for service call execution.
  example: []
  syntax:
    content: public static class ServiceCallExtensions
    content.vb: Public Module ServiceCallExtensions
  inheritance:
  - System.Object
  inheritedMembers:
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.ToString
- uid: DevInstance.BlazorToolkit.Services.ServiceCallExtensions.BeginServiceCall(DevInstance.BlazorToolkit.Services.IServiceExecutionHost,DevInstance.LogScope.IScopeLog)
  commentId: M:DevInstance.BlazorToolkit.Services.ServiceCallExtensions.BeginServiceCall(DevInstance.BlazorToolkit.Services.IServiceExecutionHost,DevInstance.LogScope.IScopeLog)
  id: BeginServiceCall(DevInstance.BlazorToolkit.Services.IServiceExecutionHost,DevInstance.LogScope.IScopeLog)
  isExtensionMethod: true
  parent: DevInstance.BlazorToolkit.Services.ServiceCallExtensions
  langs:
  - csharp
  - vb
  name: BeginServiceCall(IServiceExecutionHost, IScopeLog)
  nameWithType: ServiceCallExtensions.BeginServiceCall(IServiceExecutionHost, IScopeLog)
  fullName: DevInstance.BlazorToolkit.Services.ServiceCallExtensions.BeginServiceCall(DevInstance.BlazorToolkit.Services.IServiceExecutionHost, DevInstance.LogScope.IScopeLog)
  type: Method
  source:
    remote:
      path: src/Services/ServiceCall.cs
      branch: dotnet8
      repo: https://github.com/devInstance/BlazorToolkit
    id: BeginServiceCall
    path: Services/ServiceCall.cs
    startLine: 17
  assemblies:
  - DevInstance.BlazorToolkit
  namespace: DevInstance.BlazorToolkit.Services
  summary: Begins a service call and returns a ServiceExecutionHandler.
  example: []
  syntax:
    content: public static ServiceExecutionHandler BeginServiceCall(this IServiceExecutionHost host, IScopeLog log = null)
    parameters:
    - id: host
      type: DevInstance.BlazorToolkit.Services.IServiceExecutionHost
      description: The service execution host.
    - id: log
      type: DevInstance.LogScope.IScopeLog
      description: Optional log scope.
    return:
      type: DevInstance.BlazorToolkit.Services.ServiceExecutionHandler
      description: A ServiceExecutionHandler instance.
    content.vb: Public Shared Function BeginServiceCall(host As IServiceExecutionHost, log As IScopeLog = Nothing) As ServiceExecutionHandler
  overload: DevInstance.BlazorToolkit.Services.ServiceCallExtensions.BeginServiceCall*
- uid: DevInstance.BlazorToolkit.Services.ServiceCallExtensions.ServiceCallAsync``1(DevInstance.BlazorToolkit.Services.IServiceExecutionHost,DevInstance.BlazorToolkit.Services.PerformAsyncCallHandler{``0},System.Action{``0},System.Func{``0,System.Threading.Tasks.Task},System.Action{DevInstance.BlazorToolkit.Services.ServiceActionError[]},System.Action,System.Boolean)
  commentId: M:DevInstance.BlazorToolkit.Services.ServiceCallExtensions.ServiceCallAsync``1(DevInstance.BlazorToolkit.Services.IServiceExecutionHost,DevInstance.BlazorToolkit.Services.PerformAsyncCallHandler{``0},System.Action{``0},System.Func{``0,System.Threading.Tasks.Task},System.Action{DevInstance.BlazorToolkit.Services.ServiceActionError[]},System.Action,System.Boolean)
  id: ServiceCallAsync``1(DevInstance.BlazorToolkit.Services.IServiceExecutionHost,DevInstance.BlazorToolkit.Services.PerformAsyncCallHandler{``0},System.Action{``0},System.Func{``0,System.Threading.Tasks.Task},System.Action{DevInstance.BlazorToolkit.Services.ServiceActionError[]},System.Action,System.Boolean)
  isExtensionMethod: true
  parent: DevInstance.BlazorToolkit.Services.ServiceCallExtensions
  langs:
  - csharp
  - vb
  name: ServiceCallAsync<T>(IServiceExecutionHost, PerformAsyncCallHandler<T>, Action<T>, Func<T, Task>, Action<ServiceActionError[]>, Action, bool)
  nameWithType: ServiceCallExtensions.ServiceCallAsync<T>(IServiceExecutionHost, PerformAsyncCallHandler<T>, Action<T>, Func<T, Task>, Action<ServiceActionError[]>, Action, bool)
  fullName: DevInstance.BlazorToolkit.Services.ServiceCallExtensions.ServiceCallAsync<T>(DevInstance.BlazorToolkit.Services.IServiceExecutionHost, DevInstance.BlazorToolkit.Services.PerformAsyncCallHandler<T>, System.Action<T>, System.Func<T, System.Threading.Tasks.Task>, System.Action<DevInstance.BlazorToolkit.Services.ServiceActionError[]>, System.Action, bool)
  type: Method
  source:
    remote:
      path: src/Services/ServiceCall.cs
      branch: dotnet8
      repo: https://github.com/devInstance/BlazorToolkit
    id: ServiceCallAsync
    path: Services/ServiceCall.cs
    startLine: 34
  assemblies:
  - DevInstance.BlazorToolkit
  namespace: DevInstance.BlazorToolkit.Services
  summary: Executes an asynchronous service call.
  example: []
  syntax:
    content: public static Task ServiceCallAsync<T>(this IServiceExecutionHost host, PerformAsyncCallHandler<T> handler, Action<T> success = null, Func<T, Task> sucessAsync = null, Action<ServiceActionError[]> error = null, Action before = null, bool enableProgress = true)
    parameters:
    - id: host
      type: DevInstance.BlazorToolkit.Services.IServiceExecutionHost
      description: The service execution host.
    - id: handler
      type: DevInstance.BlazorToolkit.Services.PerformAsyncCallHandler{{T}}
      description: The handler to perform the asynchronous call.
    - id: success
      type: System.Action{{T}}
      description: Optional success callback.
    - id: sucessAsync
      type: System.Func{{T},System.Threading.Tasks.Task}
      description: Optional asynchronous success callback.
    - id: error
      type: System.Action{DevInstance.BlazorToolkit.Services.ServiceActionError[]}
      description: Optional error callback.
    - id: before
      type: System.Action
      description: Optional callback to execute before the service call.
    - id: enableProgress
      type: System.Boolean
      description: Flag to enable progress indication.
    typeParameters:
    - id: T
      description: The type of the result.
    return:
      type: System.Threading.Tasks.Task
      description: A task representing the asynchronous operation.
    content.vb: Public Shared Function ServiceCallAsync(Of T)(host As IServiceExecutionHost, handler As PerformAsyncCallHandler(Of T), success As Action(Of T) = Nothing, sucessAsync As Func(Of T, Task) = Nothing, [error] As Action(Of ServiceActionError()) = Nothing, before As Action = Nothing, enableProgress As Boolean = True) As Task
  overload: DevInstance.BlazorToolkit.Services.ServiceCallExtensions.ServiceCallAsync*
  nameWithType.vb: ServiceCallExtensions.ServiceCallAsync(Of T)(IServiceExecutionHost, PerformAsyncCallHandler(Of T), Action(Of T), Func(Of T, Task), Action(Of ServiceActionError()), Action, Boolean)
  fullName.vb: DevInstance.BlazorToolkit.Services.ServiceCallExtensions.ServiceCallAsync(Of T)(DevInstance.BlazorToolkit.Services.IServiceExecutionHost, DevInstance.BlazorToolkit.Services.PerformAsyncCallHandler(Of T), System.Action(Of T), System.Func(Of T, System.Threading.Tasks.Task), System.Action(Of DevInstance.BlazorToolkit.Services.ServiceActionError()), System.Action, Boolean)
  name.vb: ServiceCallAsync(Of T)(IServiceExecutionHost, PerformAsyncCallHandler(Of T), Action(Of T), Func(Of T, Task), Action(Of ServiceActionError()), Action, Boolean)
references:
- uid: DevInstance.BlazorToolkit.Services
  commentId: N:DevInstance.BlazorToolkit.Services
  href: DevInstance.html
  name: DevInstance.BlazorToolkit.Services
  nameWithType: DevInstance.BlazorToolkit.Services
  fullName: DevInstance.BlazorToolkit.Services
  spec.csharp:
  - uid: DevInstance
    name: DevInstance
    href: DevInstance.html
  - name: .
  - uid: DevInstance.BlazorToolkit
    name: BlazorToolkit
    href: DevInstance.BlazorToolkit.html
  - name: .
  - uid: DevInstance.BlazorToolkit.Services
    name: Services
    href: DevInstance.BlazorToolkit.Services.html
  spec.vb:
  - uid: DevInstance
    name: DevInstance
    href: DevInstance.html
  - name: .
  - uid: DevInstance.BlazorToolkit
    name: BlazorToolkit
    href: DevInstance.BlazorToolkit.html
  - name: .
  - uid: DevInstance.BlazorToolkit.Services
    name: Services
    href: DevInstance.BlazorToolkit.Services.html
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object
  name: object
  nameWithType: object
  fullName: object
  nameWithType.vb: Object
  fullName.vb: Object
  name.vb: Object
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  name: Equals(object)
  nameWithType: object.Equals(object)
  fullName: object.Equals(object)
  nameWithType.vb: Object.Equals(Object)
  fullName.vb: Object.Equals(Object)
  name.vb: Equals(Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  name: Equals(object, object)
  nameWithType: object.Equals(object, object)
  fullName: object.Equals(object, object)
  nameWithType.vb: Object.Equals(Object, Object)
  fullName.vb: Object.Equals(Object, Object)
  name.vb: Equals(Object, Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  name: GetHashCode()
  nameWithType: object.GetHashCode()
  fullName: object.GetHashCode()
  nameWithType.vb: Object.GetHashCode()
  fullName.vb: Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  - name: (
  - name: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  name: GetType()
  nameWithType: object.GetType()
  fullName: object.GetType()
  nameWithType.vb: Object.GetType()
  fullName.vb: Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  - name: (
  - name: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone
  name: MemberwiseClone()
  nameWithType: object.MemberwiseClone()
  fullName: object.MemberwiseClone()
  nameWithType.vb: Object.MemberwiseClone()
  fullName.vb: Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone
  - name: (
  - name: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  name: ReferenceEquals(object, object)
  nameWithType: object.ReferenceEquals(object, object)
  fullName: object.ReferenceEquals(object, object)
  nameWithType.vb: Object.ReferenceEquals(Object, Object)
  fullName.vb: Object.ReferenceEquals(Object, Object)
  name.vb: ReferenceEquals(Object, Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  name: ToString()
  nameWithType: object.ToString()
  fullName: object.ToString()
  nameWithType.vb: Object.ToString()
  fullName.vb: Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  - name: (
  - name: )
- uid: System
  commentId: N:System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system
  name: System
  nameWithType: System
  fullName: System
- uid: DevInstance.BlazorToolkit.Services.ServiceCallExtensions.BeginServiceCall*
  commentId: Overload:DevInstance.BlazorToolkit.Services.ServiceCallExtensions.BeginServiceCall
  href: DevInstance.BlazorToolkit.Services.ServiceCallExtensions.html#DevInstance_BlazorToolkit_Services_ServiceCallExtensions_BeginServiceCall_DevInstance_BlazorToolkit_Services_IServiceExecutionHost_DevInstance_LogScope_IScopeLog_
  name: BeginServiceCall
  nameWithType: ServiceCallExtensions.BeginServiceCall
  fullName: DevInstance.BlazorToolkit.Services.ServiceCallExtensions.BeginServiceCall
- uid: DevInstance.BlazorToolkit.Services.IServiceExecutionHost
  commentId: T:DevInstance.BlazorToolkit.Services.IServiceExecutionHost
  parent: DevInstance.BlazorToolkit.Services
  href: DevInstance.BlazorToolkit.Services.IServiceExecutionHost.html
  name: IServiceExecutionHost
  nameWithType: IServiceExecutionHost
  fullName: DevInstance.BlazorToolkit.Services.IServiceExecutionHost
- uid: DevInstance.LogScope.IScopeLog
  commentId: T:DevInstance.LogScope.IScopeLog
  parent: DevInstance.LogScope
  isExternal: true
  name: IScopeLog
  nameWithType: IScopeLog
  fullName: DevInstance.LogScope.IScopeLog
- uid: DevInstance.BlazorToolkit.Services.ServiceExecutionHandler
  commentId: T:DevInstance.BlazorToolkit.Services.ServiceExecutionHandler
  parent: DevInstance.BlazorToolkit.Services
  href: DevInstance.BlazorToolkit.Services.ServiceExecutionHandler.html
  name: ServiceExecutionHandler
  nameWithType: ServiceExecutionHandler
  fullName: DevInstance.BlazorToolkit.Services.ServiceExecutionHandler
- uid: DevInstance.LogScope
  commentId: N:DevInstance.LogScope
  isExternal: true
  name: DevInstance.LogScope
  nameWithType: DevInstance.LogScope
  fullName: DevInstance.LogScope
  spec.csharp:
  - uid: DevInstance
    name: DevInstance
    isExternal: true
  - name: .
  - uid: DevInstance.LogScope
    name: LogScope
    isExternal: true
  spec.vb:
  - uid: DevInstance
    name: DevInstance
    isExternal: true
  - name: .
  - uid: DevInstance.LogScope
    name: LogScope
    isExternal: true
- uid: DevInstance.BlazorToolkit.Services.ServiceCallExtensions.ServiceCallAsync*
  commentId: Overload:DevInstance.BlazorToolkit.Services.ServiceCallExtensions.ServiceCallAsync
  href: DevInstance.BlazorToolkit.Services.ServiceCallExtensions.html#DevInstance_BlazorToolkit_Services_ServiceCallExtensions_ServiceCallAsync__1_DevInstance_BlazorToolkit_Services_IServiceExecutionHost_DevInstance_BlazorToolkit_Services_PerformAsyncCallHandler___0__System_Action___0__System_Func___0_System_Threading_Tasks_Task__System_Action_DevInstance_BlazorToolkit_Services_ServiceActionError____System_Action_System_Boolean_
  name: ServiceCallAsync
  nameWithType: ServiceCallExtensions.ServiceCallAsync
  fullName: DevInstance.BlazorToolkit.Services.ServiceCallExtensions.ServiceCallAsync
- uid: DevInstance.BlazorToolkit.Services.PerformAsyncCallHandler{{T}}
  commentId: T:DevInstance.BlazorToolkit.Services.PerformAsyncCallHandler{``0}
  parent: DevInstance.BlazorToolkit.Services
  definition: DevInstance.BlazorToolkit.Services.PerformAsyncCallHandler`1
  href: DevInstance.BlazorToolkit.Services.PerformAsyncCallHandler-1.html
  name: PerformAsyncCallHandler<T>
  nameWithType: PerformAsyncCallHandler<T>
  fullName: DevInstance.BlazorToolkit.Services.PerformAsyncCallHandler<T>
  nameWithType.vb: PerformAsyncCallHandler(Of T)
  fullName.vb: DevInstance.BlazorToolkit.Services.PerformAsyncCallHandler(Of T)
  name.vb: PerformAsyncCallHandler(Of T)
  spec.csharp:
  - uid: DevInstance.BlazorToolkit.Services.PerformAsyncCallHandler`1
    name: PerformAsyncCallHandler
    href: DevInstance.BlazorToolkit.Services.PerformAsyncCallHandler-1.html
  - name: <
  - name: T
  - name: '>'
  spec.vb:
  - uid: DevInstance.BlazorToolkit.Services.PerformAsyncCallHandler`1
    name: PerformAsyncCallHandler
    href: DevInstance.BlazorToolkit.Services.PerformAsyncCallHandler-1.html
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: )
- uid: System.Action{{T}}
  commentId: T:System.Action{``0}
  parent: System
  definition: System.Action`1
  href: https://learn.microsoft.com/dotnet/api/system.action-1
  name: Action<T>
  nameWithType: Action<T>
  fullName: System.Action<T>
  nameWithType.vb: Action(Of T)
  fullName.vb: System.Action(Of T)
  name.vb: Action(Of T)
  spec.csharp:
  - uid: System.Action`1
    name: Action
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.action-1
  - name: <
  - name: T
  - name: '>'
  spec.vb:
  - uid: System.Action`1
    name: Action
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.action-1
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: )
- uid: System.Func{{T},System.Threading.Tasks.Task}
  commentId: T:System.Func{``0,System.Threading.Tasks.Task}
  parent: System
  definition: System.Func`2
  href: https://learn.microsoft.com/dotnet/api/system.func-2
  name: Func<T, Task>
  nameWithType: Func<T, Task>
  fullName: System.Func<T, System.Threading.Tasks.Task>
  nameWithType.vb: Func(Of T, Task)
  fullName.vb: System.Func(Of T, System.Threading.Tasks.Task)
  name.vb: Func(Of T, Task)
  spec.csharp:
  - uid: System.Func`2
    name: Func
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.func-2
  - name: <
  - name: T
  - name: ','
  - name: " "
  - uid: System.Threading.Tasks.Task
    name: Task
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading.tasks.task
  - name: '>'
  spec.vb:
  - uid: System.Func`2
    name: Func
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.func-2
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: ','
  - name: " "
  - uid: System.Threading.Tasks.Task
    name: Task
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading.tasks.task
  - name: )
- uid: System.Action{DevInstance.BlazorToolkit.Services.ServiceActionError[]}
  commentId: T:System.Action{DevInstance.BlazorToolkit.Services.ServiceActionError[]}
  parent: System
  definition: System.Action`1
  href: https://learn.microsoft.com/dotnet/api/system.action-1
  name: Action<ServiceActionError[]>
  nameWithType: Action<ServiceActionError[]>
  fullName: System.Action<DevInstance.BlazorToolkit.Services.ServiceActionError[]>
  nameWithType.vb: Action(Of ServiceActionError())
  fullName.vb: System.Action(Of DevInstance.BlazorToolkit.Services.ServiceActionError())
  name.vb: Action(Of ServiceActionError())
  spec.csharp:
  - uid: System.Action`1
    name: Action
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.action-1
  - name: <
  - uid: DevInstance.BlazorToolkit.Services.ServiceActionError
    name: ServiceActionError
    href: DevInstance.BlazorToolkit.Services.ServiceActionError.html
  - name: '['
  - name: ']'
  - name: '>'
  spec.vb:
  - uid: System.Action`1
    name: Action
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.action-1
  - name: (
  - name: Of
  - name: " "
  - uid: DevInstance.BlazorToolkit.Services.ServiceActionError
    name: ServiceActionError
    href: DevInstance.BlazorToolkit.Services.ServiceActionError.html
  - name: (
  - name: )
  - name: )
- uid: System.Action
  commentId: T:System.Action
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.action
  name: Action
  nameWithType: Action
  fullName: System.Action
- uid: System.Boolean
  commentId: T:System.Boolean
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.boolean
  name: bool
  nameWithType: bool
  fullName: bool
  nameWithType.vb: Boolean
  fullName.vb: Boolean
  name.vb: Boolean
- uid: System.Threading.Tasks.Task
  commentId: T:System.Threading.Tasks.Task
  parent: System.Threading.Tasks
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.threading.tasks.task
  name: Task
  nameWithType: Task
  fullName: System.Threading.Tasks.Task
- uid: DevInstance.BlazorToolkit.Services.PerformAsyncCallHandler`1
  commentId: T:DevInstance.BlazorToolkit.Services.PerformAsyncCallHandler`1
  href: DevInstance.BlazorToolkit.Services.PerformAsyncCallHandler-1.html
  name: PerformAsyncCallHandler<T>
  nameWithType: PerformAsyncCallHandler<T>
  fullName: DevInstance.BlazorToolkit.Services.PerformAsyncCallHandler<T>
  nameWithType.vb: PerformAsyncCallHandler(Of T)
  fullName.vb: DevInstance.BlazorToolkit.Services.PerformAsyncCallHandler(Of T)
  name.vb: PerformAsyncCallHandler(Of T)
  spec.csharp:
  - uid: DevInstance.BlazorToolkit.Services.PerformAsyncCallHandler`1
    name: PerformAsyncCallHandler
    href: DevInstance.BlazorToolkit.Services.PerformAsyncCallHandler-1.html
  - name: <
  - name: T
  - name: '>'
  spec.vb:
  - uid: DevInstance.BlazorToolkit.Services.PerformAsyncCallHandler`1
    name: PerformAsyncCallHandler
    href: DevInstance.BlazorToolkit.Services.PerformAsyncCallHandler-1.html
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: )
- uid: System.Action`1
  commentId: T:System.Action`1
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.action-1
  name: Action<T>
  nameWithType: Action<T>
  fullName: System.Action<T>
  nameWithType.vb: Action(Of T)
  fullName.vb: System.Action(Of T)
  name.vb: Action(Of T)
  spec.csharp:
  - uid: System.Action`1
    name: Action
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.action-1
  - name: <
  - name: T
  - name: '>'
  spec.vb:
  - uid: System.Action`1
    name: Action
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.action-1
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: )
- uid: System.Func`2
  commentId: T:System.Func`2
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.func-2
  name: Func<T, TResult>
  nameWithType: Func<T, TResult>
  fullName: System.Func<T, TResult>
  nameWithType.vb: Func(Of T, TResult)
  fullName.vb: System.Func(Of T, TResult)
  name.vb: Func(Of T, TResult)
  spec.csharp:
  - uid: System.Func`2
    name: Func
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.func-2
  - name: <
  - name: T
  - name: ','
  - name: " "
  - name: TResult
  - name: '>'
  spec.vb:
  - uid: System.Func`2
    name: Func
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.func-2
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: ','
  - name: " "
  - name: TResult
  - name: )
- uid: System.Threading.Tasks
  commentId: N:System.Threading.Tasks
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system
  name: System.Threading.Tasks
  nameWithType: System.Threading.Tasks
  fullName: System.Threading.Tasks
  spec.csharp:
  - uid: System
    name: System
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system
  - name: .
  - uid: System.Threading
    name: Threading
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading
  - name: .
  - uid: System.Threading.Tasks
    name: Tasks
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading.tasks
  spec.vb:
  - uid: System
    name: System
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system
  - name: .
  - uid: System.Threading
    name: Threading
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading
  - name: .
  - uid: System.Threading.Tasks
    name: Tasks
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading.tasks
