### YamlMime:ManagedReference
items:
- uid: DevInstance.BlazorToolkit.Http.IApiContext`1
  commentId: T:DevInstance.BlazorToolkit.Http.IApiContext`1
  id: IApiContext`1
  parent: DevInstance.BlazorToolkit.Http
  children:
  - DevInstance.BlazorToolkit.Http.IApiContext`1.Delete(System.String)
  - DevInstance.BlazorToolkit.Http.IApiContext`1.ExecuteAsync
  - DevInstance.BlazorToolkit.Http.IApiContext`1.Get(System.String)
  - DevInstance.BlazorToolkit.Http.IApiContext`1.ListAsync
  - DevInstance.BlazorToolkit.Http.IApiContext`1.Page(System.Int32)
  - DevInstance.BlazorToolkit.Http.IApiContext`1.Post(`0)
  - DevInstance.BlazorToolkit.Http.IApiContext`1.Put(System.String,`0)
  - DevInstance.BlazorToolkit.Http.IApiContext`1.Search(System.String)
  - DevInstance.BlazorToolkit.Http.IApiContext`1.Sort(System.String,System.Boolean)
  - DevInstance.BlazorToolkit.Http.IApiContext`1.Top(System.Int32)
  langs:
  - csharp
  - vb
  name: IApiContext<T>
  nameWithType: IApiContext<T>
  fullName: DevInstance.BlazorToolkit.Http.IApiContext<T>
  type: Interface
  source:
    remote:
      path: src/Http/IApiContext.cs
      branch: dotnet8
      repo: https://github.com/devInstance/BlazorToolkit
    id: IApiContext
    path: Http/IApiContext.cs
    startLine: 9
  assemblies:
  - DevInstance.BlazorToolkit
  namespace: DevInstance.BlazorToolkit.Http
  summary: Interface for API context operations.
  example: []
  syntax:
    content: public interface IApiContext<T>
    typeParameters:
    - id: T
      description: The type of the entity.
    content.vb: Public Interface IApiContext(Of T)
  nameWithType.vb: IApiContext(Of T)
  fullName.vb: DevInstance.BlazorToolkit.Http.IApiContext(Of T)
  name.vb: IApiContext(Of T)
- uid: DevInstance.BlazorToolkit.Http.IApiContext`1.Get(System.String)
  commentId: M:DevInstance.BlazorToolkit.Http.IApiContext`1.Get(System.String)
  id: Get(System.String)
  parent: DevInstance.BlazorToolkit.Http.IApiContext`1
  langs:
  - csharp
  - vb
  name: Get(string?)
  nameWithType: IApiContext<T>.Get(string?)
  fullName: DevInstance.BlazorToolkit.Http.IApiContext<T>.Get(string?)
  type: Method
  source:
    remote:
      path: src/Http/IApiContext.cs
      branch: dotnet8
      repo: https://github.com/devInstance/BlazorToolkit
    id: Get
    path: Http/IApiContext.cs
    startLine: 16
  assemblies:
  - DevInstance.BlazorToolkit
  namespace: DevInstance.BlazorToolkit.Http
  summary: Gets an entity by ID.
  example: []
  syntax:
    content: IApiContext<T> Get(string? id = null)
    parameters:
    - id: id
      type: System.String
      description: The ID of the entity.
    return:
      type: DevInstance.BlazorToolkit.Http.IApiContext`1
      description: The API context.
    content.vb: Function [Get](id As String = Nothing) As IApiContext(Of T)
  overload: DevInstance.BlazorToolkit.Http.IApiContext`1.Get*
  nameWithType.vb: IApiContext(Of T).Get(String)
  fullName.vb: DevInstance.BlazorToolkit.Http.IApiContext(Of T).Get(String)
  name.vb: Get(String)
- uid: DevInstance.BlazorToolkit.Http.IApiContext`1.Post(`0)
  commentId: M:DevInstance.BlazorToolkit.Http.IApiContext`1.Post(`0)
  id: Post(`0)
  parent: DevInstance.BlazorToolkit.Http.IApiContext`1
  langs:
  - csharp
  - vb
  name: Post(T)
  nameWithType: IApiContext<T>.Post(T)
  fullName: DevInstance.BlazorToolkit.Http.IApiContext<T>.Post(T)
  type: Method
  source:
    remote:
      path: src/Http/IApiContext.cs
      branch: dotnet8
      repo: https://github.com/devInstance/BlazorToolkit
    id: Post
    path: Http/IApiContext.cs
    startLine: 23
  assemblies:
  - DevInstance.BlazorToolkit
  namespace: DevInstance.BlazorToolkit.Http
  summary: Posts a new entity.
  example: []
  syntax:
    content: IApiContext<T> Post(T obj)
    parameters:
    - id: obj
      type: '{T}'
      description: The entity to post.
    return:
      type: DevInstance.BlazorToolkit.Http.IApiContext`1
      description: The API context.
    content.vb: Function Post(obj As T) As IApiContext(Of T)
  overload: DevInstance.BlazorToolkit.Http.IApiContext`1.Post*
  nameWithType.vb: IApiContext(Of T).Post(T)
  fullName.vb: DevInstance.BlazorToolkit.Http.IApiContext(Of T).Post(T)
- uid: DevInstance.BlazorToolkit.Http.IApiContext`1.Put(System.String,`0)
  commentId: M:DevInstance.BlazorToolkit.Http.IApiContext`1.Put(System.String,`0)
  id: Put(System.String,`0)
  parent: DevInstance.BlazorToolkit.Http.IApiContext`1
  langs:
  - csharp
  - vb
  name: Put(string?, T)
  nameWithType: IApiContext<T>.Put(string?, T)
  fullName: DevInstance.BlazorToolkit.Http.IApiContext<T>.Put(string?, T)
  type: Method
  source:
    remote:
      path: src/Http/IApiContext.cs
      branch: dotnet8
      repo: https://github.com/devInstance/BlazorToolkit
    id: Put
    path: Http/IApiContext.cs
    startLine: 31
  assemblies:
  - DevInstance.BlazorToolkit
  namespace: DevInstance.BlazorToolkit.Http
  summary: Puts (updates) an entity by ID.
  example: []
  syntax:
    content: IApiContext<T> Put(string? id, T obj)
    parameters:
    - id: id
      type: System.String
      description: The ID of the entity.
    - id: obj
      type: '{T}'
      description: The entity to update.
    return:
      type: DevInstance.BlazorToolkit.Http.IApiContext`1
      description: The API context.
    content.vb: Function Put(id As String, obj As T) As IApiContext(Of T)
  overload: DevInstance.BlazorToolkit.Http.IApiContext`1.Put*
  nameWithType.vb: IApiContext(Of T).Put(String, T)
  fullName.vb: DevInstance.BlazorToolkit.Http.IApiContext(Of T).Put(String, T)
  name.vb: Put(String, T)
- uid: DevInstance.BlazorToolkit.Http.IApiContext`1.Delete(System.String)
  commentId: M:DevInstance.BlazorToolkit.Http.IApiContext`1.Delete(System.String)
  id: Delete(System.String)
  parent: DevInstance.BlazorToolkit.Http.IApiContext`1
  langs:
  - csharp
  - vb
  name: Delete(string?)
  nameWithType: IApiContext<T>.Delete(string?)
  fullName: DevInstance.BlazorToolkit.Http.IApiContext<T>.Delete(string?)
  type: Method
  source:
    remote:
      path: src/Http/IApiContext.cs
      branch: dotnet8
      repo: https://github.com/devInstance/BlazorToolkit
    id: Delete
    path: Http/IApiContext.cs
    startLine: 38
  assemblies:
  - DevInstance.BlazorToolkit
  namespace: DevInstance.BlazorToolkit.Http
  summary: Deletes an entity by ID.
  example: []
  syntax:
    content: IApiContext<T> Delete(string? id)
    parameters:
    - id: id
      type: System.String
      description: The ID of the entity.
    return:
      type: DevInstance.BlazorToolkit.Http.IApiContext`1
      description: The API context.
    content.vb: Function Delete(id As String) As IApiContext(Of T)
  overload: DevInstance.BlazorToolkit.Http.IApiContext`1.Delete*
  nameWithType.vb: IApiContext(Of T).Delete(String)
  fullName.vb: DevInstance.BlazorToolkit.Http.IApiContext(Of T).Delete(String)
  name.vb: Delete(String)
- uid: DevInstance.BlazorToolkit.Http.IApiContext`1.Top(System.Int32)
  commentId: M:DevInstance.BlazorToolkit.Http.IApiContext`1.Top(System.Int32)
  id: Top(System.Int32)
  parent: DevInstance.BlazorToolkit.Http.IApiContext`1
  langs:
  - csharp
  - vb
  name: Top(int)
  nameWithType: IApiContext<T>.Top(int)
  fullName: DevInstance.BlazorToolkit.Http.IApiContext<T>.Top(int)
  type: Method
  source:
    remote:
      path: src/Http/IApiContext.cs
      branch: dotnet8
      repo: https://github.com/devInstance/BlazorToolkit
    id: Top
    path: Http/IApiContext.cs
    startLine: 45
  assemblies:
  - DevInstance.BlazorToolkit
  namespace: DevInstance.BlazorToolkit.Http
  summary: Limits the number of entities to retrieve.
  example: []
  syntax:
    content: IApiContext<T> Top(int top)
    parameters:
    - id: top
      type: System.Int32
      description: The number of entities to retrieve.
    return:
      type: DevInstance.BlazorToolkit.Http.IApiContext`1
      description: The API context.
    content.vb: Function Top(top As Integer) As IApiContext(Of T)
  overload: DevInstance.BlazorToolkit.Http.IApiContext`1.Top*
  nameWithType.vb: IApiContext(Of T).Top(Integer)
  fullName.vb: DevInstance.BlazorToolkit.Http.IApiContext(Of T).Top(Integer)
  name.vb: Top(Integer)
- uid: DevInstance.BlazorToolkit.Http.IApiContext`1.Page(System.Int32)
  commentId: M:DevInstance.BlazorToolkit.Http.IApiContext`1.Page(System.Int32)
  id: Page(System.Int32)
  parent: DevInstance.BlazorToolkit.Http.IApiContext`1
  langs:
  - csharp
  - vb
  name: Page(int)
  nameWithType: IApiContext<T>.Page(int)
  fullName: DevInstance.BlazorToolkit.Http.IApiContext<T>.Page(int)
  type: Method
  source:
    remote:
      path: src/Http/IApiContext.cs
      branch: dotnet8
      repo: https://github.com/devInstance/BlazorToolkit
    id: Page
    path: Http/IApiContext.cs
    startLine: 52
  assemblies:
  - DevInstance.BlazorToolkit
  namespace: DevInstance.BlazorToolkit.Http
  summary: Sets the page number for pagination.
  example: []
  syntax:
    content: IApiContext<T> Page(int page)
    parameters:
    - id: page
      type: System.Int32
      description: The page number.
    return:
      type: DevInstance.BlazorToolkit.Http.IApiContext`1
      description: The API context.
    content.vb: Function Page(page As Integer) As IApiContext(Of T)
  overload: DevInstance.BlazorToolkit.Http.IApiContext`1.Page*
  nameWithType.vb: IApiContext(Of T).Page(Integer)
  fullName.vb: DevInstance.BlazorToolkit.Http.IApiContext(Of T).Page(Integer)
  name.vb: Page(Integer)
- uid: DevInstance.BlazorToolkit.Http.IApiContext`1.Search(System.String)
  commentId: M:DevInstance.BlazorToolkit.Http.IApiContext`1.Search(System.String)
  id: Search(System.String)
  parent: DevInstance.BlazorToolkit.Http.IApiContext`1
  langs:
  - csharp
  - vb
  name: Search(string)
  nameWithType: IApiContext<T>.Search(string)
  fullName: DevInstance.BlazorToolkit.Http.IApiContext<T>.Search(string)
  type: Method
  source:
    remote:
      path: src/Http/IApiContext.cs
      branch: dotnet8
      repo: https://github.com/devInstance/BlazorToolkit
    id: Search
    path: Http/IApiContext.cs
    startLine: 59
  assemblies:
  - DevInstance.BlazorToolkit
  namespace: DevInstance.BlazorToolkit.Http
  summary: Searches for entities by a key.
  example: []
  syntax:
    content: IApiContext<T> Search(string key)
    parameters:
    - id: key
      type: System.String
      description: The search key.
    return:
      type: DevInstance.BlazorToolkit.Http.IApiContext`1
      description: The API context.
    content.vb: Function Search(key As String) As IApiContext(Of T)
  overload: DevInstance.BlazorToolkit.Http.IApiContext`1.Search*
  nameWithType.vb: IApiContext(Of T).Search(String)
  fullName.vb: DevInstance.BlazorToolkit.Http.IApiContext(Of T).Search(String)
  name.vb: Search(String)
- uid: DevInstance.BlazorToolkit.Http.IApiContext`1.Sort(System.String,System.Boolean)
  commentId: M:DevInstance.BlazorToolkit.Http.IApiContext`1.Sort(System.String,System.Boolean)
  id: Sort(System.String,System.Boolean)
  parent: DevInstance.BlazorToolkit.Http.IApiContext`1
  langs:
  - csharp
  - vb
  name: Sort(string, bool)
  nameWithType: IApiContext<T>.Sort(string, bool)
  fullName: DevInstance.BlazorToolkit.Http.IApiContext<T>.Sort(string, bool)
  type: Method
  source:
    remote:
      path: src/Http/IApiContext.cs
      branch: dotnet8
      repo: https://github.com/devInstance/BlazorToolkit
    id: Sort
    path: Http/IApiContext.cs
    startLine: 67
  assemblies:
  - DevInstance.BlazorToolkit
  namespace: DevInstance.BlazorToolkit.Http
  summary: Sorts the entities by a key.
  example: []
  syntax:
    content: IApiContext<T> Sort(string key, bool isAsc)
    parameters:
    - id: key
      type: System.String
      description: The key to sort by.
    - id: isAsc
      type: System.Boolean
      description: If true, sorts in ascending order; otherwise, sorts in descending order.
    return:
      type: DevInstance.BlazorToolkit.Http.IApiContext`1
      description: The API context.
    content.vb: Function Sort(key As String, isAsc As Boolean) As IApiContext(Of T)
  overload: DevInstance.BlazorToolkit.Http.IApiContext`1.Sort*
  nameWithType.vb: IApiContext(Of T).Sort(String, Boolean)
  fullName.vb: DevInstance.BlazorToolkit.Http.IApiContext(Of T).Sort(String, Boolean)
  name.vb: Sort(String, Boolean)
- uid: DevInstance.BlazorToolkit.Http.IApiContext`1.ExecuteAsync
  commentId: M:DevInstance.BlazorToolkit.Http.IApiContext`1.ExecuteAsync
  id: ExecuteAsync
  parent: DevInstance.BlazorToolkit.Http.IApiContext`1
  langs:
  - csharp
  - vb
  name: ExecuteAsync()
  nameWithType: IApiContext<T>.ExecuteAsync()
  fullName: DevInstance.BlazorToolkit.Http.IApiContext<T>.ExecuteAsync()
  type: Method
  source:
    remote:
      path: src/Http/IApiContext.cs
      branch: dotnet8
      repo: https://github.com/devInstance/BlazorToolkit
    id: ExecuteAsync
    path: Http/IApiContext.cs
    startLine: 73
  assemblies:
  - DevInstance.BlazorToolkit
  namespace: DevInstance.BlazorToolkit.Http
  summary: Executes the API context operation asynchronously.
  example: []
  syntax:
    content: Task<T?> ExecuteAsync()
    return:
      type: System.Threading.Tasks.Task{{T}}
      description: The entity.
    content.vb: Function ExecuteAsync() As Task(Of T)
  overload: DevInstance.BlazorToolkit.Http.IApiContext`1.ExecuteAsync*
  nameWithType.vb: IApiContext(Of T).ExecuteAsync()
  fullName.vb: DevInstance.BlazorToolkit.Http.IApiContext(Of T).ExecuteAsync()
- uid: DevInstance.BlazorToolkit.Http.IApiContext`1.ListAsync
  commentId: M:DevInstance.BlazorToolkit.Http.IApiContext`1.ListAsync
  id: ListAsync
  parent: DevInstance.BlazorToolkit.Http.IApiContext`1
  langs:
  - csharp
  - vb
  name: ListAsync()
  nameWithType: IApiContext<T>.ListAsync()
  fullName: DevInstance.BlazorToolkit.Http.IApiContext<T>.ListAsync()
  type: Method
  source:
    remote:
      path: src/Http/IApiContext.cs
      branch: dotnet8
      repo: https://github.com/devInstance/BlazorToolkit
    id: ListAsync
    path: Http/IApiContext.cs
    startLine: 79
  assemblies:
  - DevInstance.BlazorToolkit
  namespace: DevInstance.BlazorToolkit.Http
  summary: Lists the entities asynchronously.
  example: []
  syntax:
    content: Task<ModelList<T>?> ListAsync()
    return:
      type: System.Threading.Tasks.Task{DevInstance.BlazorToolkit.Model.ModelList{{T}}}
      description: A list of entities.
    content.vb: Function ListAsync() As Task(Of ModelList(Of T))
  overload: DevInstance.BlazorToolkit.Http.IApiContext`1.ListAsync*
  nameWithType.vb: IApiContext(Of T).ListAsync()
  fullName.vb: DevInstance.BlazorToolkit.Http.IApiContext(Of T).ListAsync()
references:
- uid: DevInstance.BlazorToolkit.Http
  commentId: N:DevInstance.BlazorToolkit.Http
  href: DevInstance.html
  name: DevInstance.BlazorToolkit.Http
  nameWithType: DevInstance.BlazorToolkit.Http
  fullName: DevInstance.BlazorToolkit.Http
  spec.csharp:
  - uid: DevInstance
    name: DevInstance
    href: DevInstance.html
  - name: .
  - uid: DevInstance.BlazorToolkit
    name: BlazorToolkit
    href: DevInstance.BlazorToolkit.html
  - name: .
  - uid: DevInstance.BlazorToolkit.Http
    name: Http
    href: DevInstance.BlazorToolkit.Http.html
  spec.vb:
  - uid: DevInstance
    name: DevInstance
    href: DevInstance.html
  - name: .
  - uid: DevInstance.BlazorToolkit
    name: BlazorToolkit
    href: DevInstance.BlazorToolkit.html
  - name: .
  - uid: DevInstance.BlazorToolkit.Http
    name: Http
    href: DevInstance.BlazorToolkit.Http.html
- uid: DevInstance.BlazorToolkit.Http.IApiContext`1.Get*
  commentId: Overload:DevInstance.BlazorToolkit.Http.IApiContext`1.Get
  href: DevInstance.BlazorToolkit.Http.IApiContext-1.html#DevInstance_BlazorToolkit_Http_IApiContext_1_Get_System_String_
  name: Get
  nameWithType: IApiContext<T>.Get
  fullName: DevInstance.BlazorToolkit.Http.IApiContext<T>.Get
  nameWithType.vb: IApiContext(Of T).Get
  fullName.vb: DevInstance.BlazorToolkit.Http.IApiContext(Of T).Get
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.string
  name: string
  nameWithType: string
  fullName: string
  nameWithType.vb: String
  fullName.vb: String
  name.vb: String
- uid: DevInstance.BlazorToolkit.Http.IApiContext`1
  commentId: T:DevInstance.BlazorToolkit.Http.IApiContext`1
  parent: DevInstance.BlazorToolkit.Http
  href: DevInstance.BlazorToolkit.Http.IApiContext-1.html
  name: IApiContext<T>
  nameWithType: IApiContext<T>
  fullName: DevInstance.BlazorToolkit.Http.IApiContext<T>
  nameWithType.vb: IApiContext(Of T)
  fullName.vb: DevInstance.BlazorToolkit.Http.IApiContext(Of T)
  name.vb: IApiContext(Of T)
  spec.csharp:
  - uid: DevInstance.BlazorToolkit.Http.IApiContext`1
    name: IApiContext
    href: DevInstance.BlazorToolkit.Http.IApiContext-1.html
  - name: <
  - name: T
  - name: '>'
  spec.vb:
  - uid: DevInstance.BlazorToolkit.Http.IApiContext`1
    name: IApiContext
    href: DevInstance.BlazorToolkit.Http.IApiContext-1.html
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: )
- uid: System
  commentId: N:System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system
  name: System
  nameWithType: System
  fullName: System
- uid: DevInstance.BlazorToolkit.Http.IApiContext`1.Post*
  commentId: Overload:DevInstance.BlazorToolkit.Http.IApiContext`1.Post
  href: DevInstance.BlazorToolkit.Http.IApiContext-1.html#DevInstance_BlazorToolkit_Http_IApiContext_1_Post__0_
  name: Post
  nameWithType: IApiContext<T>.Post
  fullName: DevInstance.BlazorToolkit.Http.IApiContext<T>.Post
  nameWithType.vb: IApiContext(Of T).Post
  fullName.vb: DevInstance.BlazorToolkit.Http.IApiContext(Of T).Post
- uid: '{T}'
  commentId: '!:T'
  definition: T
  name: T
  nameWithType: T
  fullName: T
- uid: T
  name: T
  nameWithType: T
  fullName: T
- uid: DevInstance.BlazorToolkit.Http.IApiContext`1.Put*
  commentId: Overload:DevInstance.BlazorToolkit.Http.IApiContext`1.Put
  href: DevInstance.BlazorToolkit.Http.IApiContext-1.html#DevInstance_BlazorToolkit_Http_IApiContext_1_Put_System_String__0_
  name: Put
  nameWithType: IApiContext<T>.Put
  fullName: DevInstance.BlazorToolkit.Http.IApiContext<T>.Put
  nameWithType.vb: IApiContext(Of T).Put
  fullName.vb: DevInstance.BlazorToolkit.Http.IApiContext(Of T).Put
- uid: DevInstance.BlazorToolkit.Http.IApiContext`1.Delete*
  commentId: Overload:DevInstance.BlazorToolkit.Http.IApiContext`1.Delete
  href: DevInstance.BlazorToolkit.Http.IApiContext-1.html#DevInstance_BlazorToolkit_Http_IApiContext_1_Delete_System_String_
  name: Delete
  nameWithType: IApiContext<T>.Delete
  fullName: DevInstance.BlazorToolkit.Http.IApiContext<T>.Delete
  nameWithType.vb: IApiContext(Of T).Delete
  fullName.vb: DevInstance.BlazorToolkit.Http.IApiContext(Of T).Delete
- uid: DevInstance.BlazorToolkit.Http.IApiContext`1.Top*
  commentId: Overload:DevInstance.BlazorToolkit.Http.IApiContext`1.Top
  href: DevInstance.BlazorToolkit.Http.IApiContext-1.html#DevInstance_BlazorToolkit_Http_IApiContext_1_Top_System_Int32_
  name: Top
  nameWithType: IApiContext<T>.Top
  fullName: DevInstance.BlazorToolkit.Http.IApiContext<T>.Top
  nameWithType.vb: IApiContext(Of T).Top
  fullName.vb: DevInstance.BlazorToolkit.Http.IApiContext(Of T).Top
- uid: System.Int32
  commentId: T:System.Int32
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.int32
  name: int
  nameWithType: int
  fullName: int
  nameWithType.vb: Integer
  fullName.vb: Integer
  name.vb: Integer
- uid: DevInstance.BlazorToolkit.Http.IApiContext`1.Page*
  commentId: Overload:DevInstance.BlazorToolkit.Http.IApiContext`1.Page
  href: DevInstance.BlazorToolkit.Http.IApiContext-1.html#DevInstance_BlazorToolkit_Http_IApiContext_1_Page_System_Int32_
  name: Page
  nameWithType: IApiContext<T>.Page
  fullName: DevInstance.BlazorToolkit.Http.IApiContext<T>.Page
  nameWithType.vb: IApiContext(Of T).Page
  fullName.vb: DevInstance.BlazorToolkit.Http.IApiContext(Of T).Page
- uid: DevInstance.BlazorToolkit.Http.IApiContext`1.Search*
  commentId: Overload:DevInstance.BlazorToolkit.Http.IApiContext`1.Search
  href: DevInstance.BlazorToolkit.Http.IApiContext-1.html#DevInstance_BlazorToolkit_Http_IApiContext_1_Search_System_String_
  name: Search
  nameWithType: IApiContext<T>.Search
  fullName: DevInstance.BlazorToolkit.Http.IApiContext<T>.Search
  nameWithType.vb: IApiContext(Of T).Search
  fullName.vb: DevInstance.BlazorToolkit.Http.IApiContext(Of T).Search
- uid: DevInstance.BlazorToolkit.Http.IApiContext`1.Sort*
  commentId: Overload:DevInstance.BlazorToolkit.Http.IApiContext`1.Sort
  href: DevInstance.BlazorToolkit.Http.IApiContext-1.html#DevInstance_BlazorToolkit_Http_IApiContext_1_Sort_System_String_System_Boolean_
  name: Sort
  nameWithType: IApiContext<T>.Sort
  fullName: DevInstance.BlazorToolkit.Http.IApiContext<T>.Sort
  nameWithType.vb: IApiContext(Of T).Sort
  fullName.vb: DevInstance.BlazorToolkit.Http.IApiContext(Of T).Sort
- uid: System.Boolean
  commentId: T:System.Boolean
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.boolean
  name: bool
  nameWithType: bool
  fullName: bool
  nameWithType.vb: Boolean
  fullName.vb: Boolean
  name.vb: Boolean
- uid: DevInstance.BlazorToolkit.Http.IApiContext`1.ExecuteAsync*
  commentId: Overload:DevInstance.BlazorToolkit.Http.IApiContext`1.ExecuteAsync
  href: DevInstance.BlazorToolkit.Http.IApiContext-1.html#DevInstance_BlazorToolkit_Http_IApiContext_1_ExecuteAsync
  name: ExecuteAsync
  nameWithType: IApiContext<T>.ExecuteAsync
  fullName: DevInstance.BlazorToolkit.Http.IApiContext<T>.ExecuteAsync
  nameWithType.vb: IApiContext(Of T).ExecuteAsync
  fullName.vb: DevInstance.BlazorToolkit.Http.IApiContext(Of T).ExecuteAsync
- uid: System.Threading.Tasks.Task{{T}}
  commentId: T:System.Threading.Tasks.Task{`0}
  parent: System.Threading.Tasks
  definition: System.Threading.Tasks.Task`1
  href: https://learn.microsoft.com/dotnet/api/system.threading.tasks.task-1
  name: Task<T>
  nameWithType: Task<T>
  fullName: System.Threading.Tasks.Task<T>
  nameWithType.vb: Task(Of T)
  fullName.vb: System.Threading.Tasks.Task(Of T)
  name.vb: Task(Of T)
  spec.csharp:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading.tasks.task-1
  - name: <
  - name: T
  - name: '>'
  spec.vb:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading.tasks.task-1
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: )
- uid: System.Threading.Tasks.Task`1
  commentId: T:System.Threading.Tasks.Task`1
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.threading.tasks.task-1
  name: Task<TResult>
  nameWithType: Task<TResult>
  fullName: System.Threading.Tasks.Task<TResult>
  nameWithType.vb: Task(Of TResult)
  fullName.vb: System.Threading.Tasks.Task(Of TResult)
  name.vb: Task(Of TResult)
  spec.csharp:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading.tasks.task-1
  - name: <
  - name: TResult
  - name: '>'
  spec.vb:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading.tasks.task-1
  - name: (
  - name: Of
  - name: " "
  - name: TResult
  - name: )
- uid: System.Threading.Tasks
  commentId: N:System.Threading.Tasks
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system
  name: System.Threading.Tasks
  nameWithType: System.Threading.Tasks
  fullName: System.Threading.Tasks
  spec.csharp:
  - uid: System
    name: System
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system
  - name: .
  - uid: System.Threading
    name: Threading
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading
  - name: .
  - uid: System.Threading.Tasks
    name: Tasks
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading.tasks
  spec.vb:
  - uid: System
    name: System
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system
  - name: .
  - uid: System.Threading
    name: Threading
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading
  - name: .
  - uid: System.Threading.Tasks
    name: Tasks
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading.tasks
- uid: DevInstance.BlazorToolkit.Http.IApiContext`1.ListAsync*
  commentId: Overload:DevInstance.BlazorToolkit.Http.IApiContext`1.ListAsync
  href: DevInstance.BlazorToolkit.Http.IApiContext-1.html#DevInstance_BlazorToolkit_Http_IApiContext_1_ListAsync
  name: ListAsync
  nameWithType: IApiContext<T>.ListAsync
  fullName: DevInstance.BlazorToolkit.Http.IApiContext<T>.ListAsync
  nameWithType.vb: IApiContext(Of T).ListAsync
  fullName.vb: DevInstance.BlazorToolkit.Http.IApiContext(Of T).ListAsync
- uid: System.Threading.Tasks.Task{DevInstance.BlazorToolkit.Model.ModelList{{T}}}
  commentId: T:System.Threading.Tasks.Task{DevInstance.BlazorToolkit.Model.ModelList{`0}}
  parent: System.Threading.Tasks
  definition: System.Threading.Tasks.Task`1
  href: https://learn.microsoft.com/dotnet/api/system.threading.tasks.task-1
  name: Task<ModelList<T>>
  nameWithType: Task<ModelList<T>>
  fullName: System.Threading.Tasks.Task<DevInstance.BlazorToolkit.Model.ModelList<T>>
  nameWithType.vb: Task(Of ModelList(Of T))
  fullName.vb: System.Threading.Tasks.Task(Of DevInstance.BlazorToolkit.Model.ModelList(Of T))
  name.vb: Task(Of ModelList(Of T))
  spec.csharp:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading.tasks.task-1
  - name: <
  - uid: DevInstance.BlazorToolkit.Model.ModelList`1
    name: ModelList
    href: DevInstance.BlazorToolkit.Model.ModelList-1.html
  - name: <
  - name: T
  - name: '>'
  - name: '>'
  spec.vb:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading.tasks.task-1
  - name: (
  - name: Of
  - name: " "
  - uid: DevInstance.BlazorToolkit.Model.ModelList`1
    name: ModelList
    href: DevInstance.BlazorToolkit.Model.ModelList-1.html
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: )
  - name: )
